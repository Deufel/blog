@layer css_5_layout.utils {
    .stack > * + * {
        margin-block-start: 1.5rem;
    }
    .flow > * + * {
        margin-block-start: var(--flow-space, 1em);
    }
    .grid {
        display: grid;
        grid-template-columns: repeat(
            var(--grid-placement, auto-fill),
            minmax(var(--grid-min-item-size, 16rem), 1fr)
        );
        gap: var(--gutter, var(--space-l));
    }
    .grid[data-layout="thirds"] {
        --grid-placement: auto-fit;
        --grid-min-item-size: clamp(16rem, 33%, 20rem);
    }
    .repel {
        display: flex;
        flex-wrap: wrap;
        justify-content: space-between;
        align-items: var(--repel-vertical-alignment, center);
        gap: var(--gutter, 1em);
    }
}

@layer css_6_components {
    .button {
        padding: 1.5em 2em;
        text-box-trim: trim-both;
        text-box-edge: cap alphabetic;
    }
}

:where(html) {
    --border-size-1: 1px;
    --border-size-2: 2px;
    --border-size-3: 5px;
    --border-size-4: 10px;
    --border-size-5: 25px;
    --radius-1: 2px;
    --radius-2: 5px;
    --radius-3: 1rem;
    --radius-4: 2rem;
    --radius-5: 4rem;
    --radius-6: 8rem;
    --radius-drawn-1: 255px 15px 225px 15px/15px 225px 15px 255px;
    --radius-drawn-2: 125px 10px 20px 185px/25px 205px 205px 25px;
    --radius-drawn-3: 15px 255px 15px 225px/225px 15px 255px 15px;
    --radius-drawn-4: 15px 25px 155px 25px/225px 150px 25px 115px;
    --radius-drawn-5: 250px 25px 15px 20px/15px 80px 105px 115px;
    --radius-drawn-6: 28px 100px 20px 15px/150px 30px 205px 225px;
    --radius-round: 1e5px;
    --radius-blob-1: 30% 70% 70% 30%/53% 30% 70% 47%;
    --radius-blob-2: 53% 47% 34% 66%/63% 46% 54% 37%;
    --radius-blob-3: 37% 63% 56% 44%/49% 56% 44% 51%;
    --radius-blob-4: 63% 37% 37% 63%/43% 37% 63% 57%;
    --radius-blob-5: 49% 51% 48% 52%/57% 44% 56% 43%;
    --radius-conditional-1: clamp(
        0px,
        calc(100vw - 100%) * 1e5,
        var(--radius-1)
    );
    --radius-conditional-2: clamp(
        0px,
        calc(100vw - 100%) * 1e5,
        var(--radius-2)
    );
    --radius-conditional-3: clamp(
        0px,
        calc(100vw - 100%) * 1e5,
        var(--radius-3)
    );
    --radius-conditional-4: clamp(
        0px,
        calc(100vw - 100%) * 1e5,
        var(--radius-4)
    );
    --radius-conditional-5: clamp(
        0px,
        calc(100vw - 100%) * 1e5,
        var(--radius-5)
    );
    --radius-conditional-6: clamp(
        0px,
        calc(100vw - 100%) * 1e5,
        var(--radius-6)
    );

    :where(.rounded) {
        --_rounded: initial;
        border-radius: var(--_rounded, 10px);
    }
    :where(.padding) {
        --_padding: initial;
        --_padding-inline: initial;
        --_padding-block: initial;
        padding-inline: var(--_padding-inline, var(--_padding, 1rem));
        padding-block: var(--_padding-block, var(--_padding, 1rem));
    }
    :where(.margin) {
        --_margin: initial;
        --_margin-inline: initial;
        --_margin-block: initial;
        margin-inline: var(--_margin-inline, var(--_margin, 1rem));
        margin-block: var(--_margin-block, var(--_margin, 1rem));
    }
    :where(.flex) {
        --_gap: initial;
        align-items: center;
        gap: var(--_gap, 1rem);
        display: flex;
    }
    :where(.flex-wrap) {
        --_gap: initial;
        align-items: center;
        gap: var(--_gap, 1rem);
        flex-wrap: wrap;
        display: flex;
    }
    :where(.flex-center) {
        --_gap: initial;
        place-content: center;
        align-items: center;
        gap: var(--_gap, 1rem);
        flex-wrap: wrap;
        display: flex;
    }
    :where(.grid) {
        --_gap: initial;
        align-content: start;
        gap: var(--_gap, 1rem);
        display: grid;
    }
    :where(.border) {
        --_border-size: initial;
        --_border-style: initial;
        --_border-color: initial;
        border: var(--_border-size, 1px) var(--_border-style, solid)
            var(--_border-color, #0005);
    }
    :where(.content) {
        --_content: initial;
        max-inline-size: var(--_content, 50ch);
    }
    :where(.scroll) {
        --_scroll: initial;
        --_scroll-x: initial;
        --_scroll-y: initial;
        overflow: var(--_scroll-x, var(--_scroll, auto))
            var(--_scroll-y, var(--_scroll, auto));
    }
    :where(.snaps) {
        --_snaps: initial;
        scroll-snap-type: var(--_snaps, both) mandatory;
    }
    :where(.snap) {
        --_snap: initial;
        scroll-snap-align: var(--_snap, center);
    }
    :where(.snap-stop) {
        scroll-snap-stop: always;
    }
    :where(.truncate) {
        white-space: nowrap;
        text-overflow: ellipsis;
        overflow: hidden;
    }
    :where(.bold) {
        --_bold: initial;
        font-weight: var(--_bold, bold);
    }
    :where(.visually-hidden, .sr-only) {
        block-size: 0;
        inline-size: 0;
        overflow: hidden;
    }
    :where(.text-xs) {
        font-size: 0.8rem;
    }
    :where(.text-sm) {
        font-size: 0.9rem;
    }
    :where(.text-md) {
        font-size: 1.25rem;
    }
    :where(.text-lg) {
        font-size: 3rem;
    }
    :where(.square) {
        aspect-ratio: 1;
    }
    :where(.round) {
        aspect-ratio: 1;
        border-radius: 1000000000px;
        overflow: clip;
    }
}
:where(.rounded) {
    --_rounded: initial;
    border-radius: var(--_rounded, var(--radius-2));
}
:where(.rounded-match) {
    overflow-clip-margin: content-box;
    overflow: clip;
}
:where(.padding) {
    --_padding: initial;
    --_padding-inline: initial;
    --_padding-block: initial;
    padding-inline: var(--_padding-inline, var(--_padding, var(--size-3)));
    padding-block: var(--_padding-block, var(--_padding, var(--size-3)));
}
:where(.margin) {
    --_margin: initial;
    --_margin-inline: initial;
    --_margin-block: initial;
    margin-inline: var(--_margin-inline, var(--_margin, var(--size-3)));
    margin-block: var(--_margin-block, var(--_margin, var(--size-3)));
}
:where(.flex) {
    --_gap: initial;
    align-items: center;
    gap: var(--_gap, var(--size-3));
    display: flex;
}
:where(.flex-wrap) {
    --_gap: initial;
    align-items: center;
    gap: var(--_gap, var(--size-3));
    flex-wrap: wrap;
    display: flex;
}
:where(.flex-center) {
    --_gap: initial;
    place-content: center;
    align-items: center;
    gap: var(--_gap, var(--size-3));
    flex-wrap: wrap;
    display: flex;
}
:where(.grid) {
    --_gap: initial;
    align-content: start;
    gap: var(--_gap, var(--size-3));
    display: grid;
}
:where(.surface) {
    --_surface: initial;
    background: var(--_surface, var(--surface-3));
}
:where(.surface) :where(.surface) {
    --_surface: var(--surface-2);
}
:where(.surface) :where(.surface) :where(.surface) {
    --_surface: var(--surface-1);
}
:where(.well) {
    --_well: initial;
    background: var(--_well, var(--well-1));
}
:where(.well) :where(.well) {
    --_well: var(--well-2);
}
:where(.shadow) {
    --_shadow: initial;
    box-shadow: var(--_shadow, var(--shadow-3));
}
:where(.border) {
    --_border-size: initial;
    --_border-style: initial;
    --_border-color: initial;
    border: var(--_border-size, var(--border-size-1))
        var(--_border-style, solid) var(--_border-color, var(--surface-2));
}
:where(.border):where(.surface) {
    --_border-color: var(--surface-3);
}
:where(.content) {
    --_content: initial;
    max-inline-size: var(--_content, var(--size-content-2));
}
:where(.scroll) {
    --_scroll: initial;
    --_scroll-x: initial;
    --_scroll-y: initial;
    overscroll-behavior: contain;
    overflow: var(--_scroll-x, var(--_scroll, auto))
        var(--_scroll-y, var(--_scroll, auto));
}
@media (prefers-reduced-motion: no-preference) {
    :where(.scroll) {
        scroll-behavior: smooth;
    }
}
:where(.snaps) {
    --_snaps: initial;
    scroll-snap-type: var(--_snaps, both) mandatory;
}
:where(.snap) {
    --_snap: initial;
    scroll-snap-align: var(--_snap, center);
}
:where(.snap-stop) {
    scroll-snap-stop: always;
}
:where(.truncate) {
    white-space: nowrap;
    text-overflow: ellipsis;
    overflow: hidden;
}
:where(.bold) {
    --_bold: initial;
    font-weight: var(--_bold, var(--font-weight-700, bold));
}
:where(.visually-hidden, .sr-only) {
    block-size: 0;
    inline-size: 0;
    overflow: hidden;
}
:where(.subtext) {
    color: var(--text-2);
}
:where(.text-xs) {
    font-size: var(--font-size-0);
}
:where(.text-sm) {
    font-size: var(--font-size-1);
}
:where(.text-md) {
    font-size: var(--font-size-3);
}
:where(.text-lg) {
    font-size: var(--font-size-5);
}
:where(.square) {
    aspect-ratio: 1;
}
:where(.round) {
    aspect-ratio: 1;
    border-radius: var(--radius-round);
    overflow: clip;
}
