/*
SEMANTIC UI LIBRARY - MODERN CSS STRUCTURE
A minimal, semantic webpage development experience using modern CSS.
No legacy browser support - embracing cutting-edge features.
Layer hierarchy: Foundation → Structure → Content → Enhancement
*/

@layer tokens, reset, elements, layouts, components.primitives, components.composite, components.interactive, patterns, themes, utilities;

/* ======================================== TOKENS - Design System Foundation ======================================== */

@layer tokens {
    :where(:root) {
        /* Typography Scale */
        --font-sans:
            system-ui, -apple-system, Segoe UI, Roboto, Ubuntu, Cantarell,
            Noto Sans, sans-serif;
        --font-serif: ui-serif, serif;
        --font-mono:
            Dank Mono, Operator Mono, Inconsolata, Fira Mono, ui-monospace,
            SF Mono, Monaco, Droid Sans Mono, Source Code Pro, monospace;
        --font-weight-1: 100;
        --font-weight-2: 200;
        --font-weight-3: 300;
        --font-weight-4: 400;
        --font-weight-5: 500;
        --font-weight-6: 600;
        --font-weight-7: 700;
        --font-weight-8: 800;
        --font-weight-9: 900;

        --font-size-00: 0.5rem;
        --font-size-0: 0.75rem;
        --font-size-1: 1rem;
        --font-size-2: 1.1rem;
        --font-size-3: 1.25rem;
        --font-size-4: 1.5rem;
        --font-size-5: 2rem;
        --font-size-6: 2.5rem;
        --font-size-7: 3rem;
        --font-size-8: 3.5rem;

        --font-size-fluid-0: clamp(0.75rem, 2vw, 1rem);
        --font-size-fluid-1: clamp(1rem, 4vw, 1.5rem);
        --font-size-fluid-2: clamp(1.5rem, 6vw, 2.5rem);
        --font-size-fluid-3: clamp(2rem, 9vw, 3.5rem);

        --font-lineheight-00: 0.95;
        --font-lineheight-0: 1.1;
        --font-lineheight-1: 1.25;
        --font-lineheight-2: 1.375;
        --font-lineheight-3: 1.5;
        --font-lineheight-4: 1.75;
        --font-lineheight-5: 2;

        /* Spacing Scale */
        --size-000: -0.5rem;
        --size-00: -0.25rem;
        --size-1: 0.25rem;
        --size-2: 0.5rem;
        --size-3: 1rem;
        --size-4: 1.25rem;
        --size-5: 1.5rem;
        --size-6: 1.75rem;
        --size-7: 2rem;
        --size-8: 3rem;
        --size-9: 4rem;
        --size-10: 5rem;
        --size-11: 7.5rem;
        --size-12: 10rem;
        --size-13: 15rem;
        --size-14: 20rem;
        --size-15: 30rem;

        --size-fluid-1: clamp(0.5rem, 1vw, 1rem);
        --size-fluid-2: clamp(1rem, 2vw, 1.5rem);
        --size-fluid-3: clamp(1.5rem, 3vw, 2rem);
        --size-fluid-4: clamp(2rem, 4vw, 3rem);
        --size-fluid-5: clamp(4rem, 5vw, 5rem);
        --size-fluid-6: clamp(5rem, 7vw, 7.5rem);
        --size-fluid-7: clamp(7.5rem, 10vw, 10rem);
        --size-fluid-8: clamp(10rem, 20vw, 15rem);
        --size-fluid-9: clamp(15rem, 30vw, 20rem);
        --size-fluid-10: clamp(20rem, 40vw, 30rem);

        /* Content Sizes */
        --size-content-1: 20ch;
        --size-content-2: 45ch;
        --size-content-3: 60ch;
        --size-content-4: 75ch;

        --size-header-1: 20ch;
        --size-header-2: 25ch;
        --size-header-3: 35ch;

        /* Breakpoints */
        --size-xxs: 240px;
        --size-xs: 360px;
        --size-sm: 480px;
        --size-md: 768px;
        --size-lg: 1024px;
        --size-xl: 1440px;
        --size-xxl: 1920px;

        /* Border & Radius */
        --border-size-1: 1px;
        --border-size-2: 2px;
        --border-size-3: 5px;
        --border-size-4: 10px;
        --border-size-5: 25px;

        --radius-1: 2px;
        --radius-2: 5px;
        --radius-3: 1rem;
        --radius-4: 2rem;
        --radius-5: 4rem;
        --radius-6: 8rem;
        --radius-round: 100000px;

        /* Aspect Ratios */
        --ratio-square: 1;
        --ratio-landscape: 4/3;
        --ratio-portrait: 3/4;
        --ratio-widescreen: 16/9;
        --ratio-ultrawide: 18/5;
        --ratio-golden: 1.618/1;

        /* Easing Functions */
        --ease-1: cubic-bezier(0.25, 0, 0.5, 1);
        --ease-2: cubic-bezier(0.25, 0, 0.4, 1);
        --ease-3: cubic-bezier(0.25, 0, 0.3, 1);
        --ease-4: cubic-bezier(0.25, 0, 0.2, 1);
        --ease-5: cubic-bezier(0.25, 0, 0.1, 1);

        --ease-in-1: cubic-bezier(0.25, 0, 1, 1);
        --ease-in-2: cubic-bezier(0.5, 0, 1, 1);
        --ease-in-3: cubic-bezier(0.7, 0, 1, 1);
        --ease-in-4: cubic-bezier(0.9, 0, 1, 1);
        --ease-in-5: cubic-bezier(1, 0, 1, 1);

        --ease-out-1: cubic-bezier(0, 0, 0.75, 1);
        --ease-out-2: cubic-bezier(0, 0, 0.5, 1);
        --ease-out-3: cubic-bezier(0, 0, 0.3, 1);
        --ease-out-4: cubic-bezier(0, 0, 0.1, 1);
        --ease-out-5: cubic-bezier(0, 0, 0, 1);

        /* Shadows & Effects */
        --shadow-strength: 1%;
        --shadow-chroma: 3%;
        --layer-1: 1;
        --layer-2: 2;
        --layer-3: 3;
        --layer-4: 4;
        --layer-5: 5;
        --layer-important: 2147480000;

        /* Color Palette Foundation */
        --palette-hue: 250;
        --palette-hue-rotate-by: 0;
        --palette-chroma: 0.15;

        /* OKLCH Color Hues */
        --oklch-red: 25;
        --oklch-pink: 350;
        --oklch-purple: 310;
        --oklch-violet: 290;
        --oklch-indigo: 270;
        --oklch-blue: 240;
        --oklch-cyan: 210;
        --oklch-teal: 185;
        --oklch-green: 145;
        --oklch-lime: 125;
        --oklch-yellow: 100;
        --oklch-orange: 75;

        /* Dynamic Color Palette */
        --color-1: oklch(
            98% calc(0.03 * var(--palette-chroma, 1))
                calc(var(--palette-hue) + (0 * var(--palette-hue-rotate-by)))
        );
        --color-2: oklch(
            97% calc(0.06 * var(--palette-chroma, 1))
                calc(var(--palette-hue) + (1 * var(--palette-hue-rotate-by)))
        );
        --color-3: oklch(
            93% calc(0.1 * var(--palette-chroma, 1))
                calc(var(--palette-hue) + (2 * var(--palette-hue-rotate-by)))
        );
        --color-4: oklch(
            84% calc(0.12 * var(--palette-chroma, 1))
                calc(var(--palette-hue) + (3 * var(--palette-hue-rotate-by)))
        );
        --color-5: oklch(
            80% calc(0.16 * var(--palette-chroma, 1))
                calc(var(--palette-hue) + (4 * var(--palette-hue-rotate-by)))
        );
        --color-6: oklch(
            71% calc(0.19 * var(--palette-chroma, 1))
                calc(var(--palette-hue) + (5 * var(--palette-hue-rotate-by)))
        );
        --color-7: oklch(
            66% calc(0.2 * var(--palette-chroma, 1))
                calc(var(--palette-hue) + (6 * var(--palette-hue-rotate-by)))
        );
        --color-8: oklch(
            58% calc(0.21 * var(--palette-chroma, 1))
                calc(var(--palette-hue) + (7 * var(--palette-hue-rotate-by)))
        );
        --color-9: oklch(
            53% calc(0.2 * var(--palette-chroma, 1))
                calc(var(--palette-hue) + (8 * var(--palette-hue-rotate-by)))
        );
        --color-10: oklch(
            49% calc(0.19 * var(--palette-chroma, 1))
                calc(var(--palette-hue) + (9 * var(--palette-hue-rotate-by)))
        );
        --color-11: oklch(
            42% calc(0.17 * var(--palette-chroma, 1))
                calc(var(--palette-hue) + (10 * var(--palette-hue-rotate-by)))
        );
        --color-12: oklch(
            35% calc(0.15 * var(--palette-chroma, 1))
                calc(var(--palette-hue) + (11 * var(--palette-hue-rotate-by)))
        );
        --color-13: oklch(
            27% calc(0.12 * var(--palette-chroma, 1))
                calc(var(--palette-hue) + (12 * var(--palette-hue-rotate-by)))
        );
        --color-14: oklch(
            20% calc(0.09 * var(--palette-chroma, 1))
                calc(var(--palette-hue) + (13 * var(--palette-hue-rotate-by)))
        );
        --color-15: oklch(
            16% calc(0.07 * var(--palette-chroma, 1))
                calc(var(--palette-hue) + (14 * var(--palette-hue-rotate-by)))
        );
        --color-16: oklch(
            10% calc(0.05 * var(--palette-chroma, 1))
                calc(var(--palette-hue) + (15 * var(--palette-hue-rotate-by)))
        );

        /* Shadow System */
        --shadow-hue: var(--palette-hue);
        --shadow-color: 15% var(--shadow-chroma) var(--shadow-hue);
        --shadow-1: 0 1px 2px -1px
            oklch(var(--shadow-color) / calc(var(--shadow-strength) + 9%));
        --shadow-2:
            0 3px 5px -2px
                oklch(var(--shadow-color) / calc(var(--shadow-strength) + 3%)),
            0 7px 14px -5px
                oklch(var(--shadow-color) / calc(var(--shadow-strength) + 5%));
        --shadow-3:
            0 -1px 3px 0
                oklch(var(--shadow-color) / calc(var(--shadow-strength) + 2%)),
            0 1px 2px -5px
                oklch(var(--shadow-color) / calc(var(--shadow-strength) + 2%)),
            0 2px 5px -5px
                oklch(var(--shadow-color) / calc(var(--shadow-strength) + 4%)),
            0 4px 12px -5px
                oklch(var(--shadow-color) / calc(var(--shadow-strength) + 5%)),
            0 12px 15px -5px
                oklch(var(--shadow-color) / calc(var(--shadow-strength) + 7%));
        --shadow-4:
            0 -2px 5px 0
                oklch(var(--shadow-color) / calc(var(--shadow-strength) + 2%)),
            0 1px 1px -2px
                oklch(var(--shadow-color) / calc(var(--shadow-strength) + 3%)),
            0 2px 2px -2px
                oklch(var(--shadow-color) / calc(var(--shadow-strength) + 3%)),
            0 5px 5px -2px
                oklch(var(--shadow-color) / calc(var(--shadow-strength) + 4%)),
            0 9px 9px -2px
                oklch(var(--shadow-color) / calc(var(--shadow-strength) + 5%)),
            0 16px 16px -2px
                oklch(var(--shadow-color) / calc(var(--shadow-strength) + 6%));
        --inner-shadow-0: inset 0 0 0 1px
            oklch(var(--shadow-color) / calc(var(--shadow-strength) + 9%));
        --inner-shadow-1: inset 0 1px 2px 0
            oklch(var(--shadow-color) / calc(var(--shadow-strength) + 9%));
        --inner-shadow-2: inset 0 1px 4px 0
            oklch(var(--shadow-color) / calc(var(--shadow-strength) + 9%));
        --inner-shadow-3: inset 0 2px 8px 0
            oklch(var(--shadow-color) / calc(var(--shadow-strength) + 9%));

        /* Dark Mode Shadow Adjustments */
        @media (prefers-color-scheme: dark) {
            * {
                --shadow-strength: 25%;
                --shadow-chroma: 10%;
            }
        }
    }
}

/* ======================================== 2. RESET - Modern Browser Reset ======================================== */
@layer reset {
    *,
    ::before,
    ::after {
        box-sizing: border-box;
    }
    :where(html) {
        block-size: 100%;
        font-family: var(--font-sans);
        interpolate-size: allow-keywords;
        line-height: var(--font-lineheight-4);
        -moz-text-size-adjust: none;
        -webkit-text-size-adjust: none;
        text-size-adjust: none;
        @media (prefers-reduced-motion: no-preference) {
            scroll-behavior: smooth;
        }
    }
    :where(body) {
        -moz-osx-font-smoothing: grayscale;
        -webkit-font-smoothing: antialiased;
        container-type: inline-size;
        font-size: 16px;
        font-synthesis: style;
        font-weight: 400;
        inline-size: 100%;
        margin: 0;
        min-block-size: 100%;
        min-inline-size: 320px;
        position: relative;
        text-rendering: optimizeLegibility;
    }
    :where(:not(dialog, popover)) {
        margin: 0;
    }
    :where(dialog, popover) {
        margin: 0;
        inset: auto;
        max-height: 100%;
    }
    :where(:not(fieldset, progress, meter)) {
        background-origin: border-box;
        background-repeat: no-repeat;
        border-style: solid;
        border-width: 0;
    }
    :where(input, button, textarea),
    :where(input[type="file"])::-webkit-file-upload-button {
        color: inherit;
        font-size: inherit;
        font: inherit;
        letter-spacing: inherit;
    }
    /* Modern Focus Styles */
    :focus-visible {
        border-radius: var(--radius-2);
        outline: 2px solid var(--primary);
        outline-offset: 2px;
    }
    @media (prefers-reduced-motion: no-preference) {
        :where(:focus-visible) {
            transition: outline-offset 0.15s var(--ease-2);
        }
        :where(:not(:active):focus-visible) {
            transition-duration: 0.15s;
        }
    }
    /* Interactive Elements */
    :where(
        a[href],
        area,
        button,
        input:not(
            [type="text"],
            [type="email"],
            [type="number"],
            [type="password"],
            [type="tel"],
            [type="url"]
        ),
        label[for],
        select,
        summary
    ) {
        cursor: pointer;
    }
    :where(
        a[href],
        area,
        button,
        input,
        label[for],
        select,
        summary,
        textarea,
        [tabindex]:not([tabindex*="-"])
    ) {
        -webkit-tap-highlight-color: transparent;
        touch-action: manipulation;
    }
    /* Media Elements */
    :where(img, svg, video, canvas, audio, iframe, embed, object) {
        display: block;
    }
    :where(img, svg, video) {
        block-size: auto;
        max-inline-size: 100%;
    }
    :where(svg:not([width])) {
        inline-size: var(--size-7);
    }
    /* Lists */
    :where(ul, ol) {
        padding-inline-start: var(--size-8);
    }
    /* Scroll Margin */
    :target {
        scroll-margin-block-start: 2rem;
    }
    /* Popovers */
    [popover] {
        padding: 0;
    }
}

/* ========================================
3. ELEMENTS - Semantic HTML Styling
======================================== */
@layer elements {
    /* Typography Hierarchy */
    :where(h1, h2, h3, h4, h5, h6) {
        color: var(--text-color-1);
        font-weight: 700;
        text-wrap: pretty;
    }
    :where(h1) {
        font-size: var(--font-size-h1, var(--font-size-fluid-3));
        letter-spacing: -0.02em;
        line-height: 1.15;
    }
    :where(h2) {
        font-size: var(--font-size-h2, var(--font-size-fluid-2));
        letter-spacing: -0.02em;
        line-height: 1.2;
    }
    :where(h3) {
        font-size: var(--font-size-h3, var(--font-size-fluid-1));
        letter-spacing: -0.01em;
        line-height: 1.167;
    }
    :where(h4) {
        font-size: var(--font-size-h4, var(--font-size-3));
        letter-spacing: -0.01em;
        line-height: 1.235;
    }
    :where(h5) {
        font-size: var(--font-size-h5, var(--font-size-2));
        line-height: 1.334;
    }
    :where(h6) {
        font-size: var(--font-size-h6, var(--font-size-1));
        line-height: 1;
    }
    :where(p) {
        text-wrap: pretty;
    }
    /* Links */
    :where(a) {
        color: var(--primary);
        text-decoration: underline;
        text-underline-offset: 0.125em;
        &:hover {
            color: var(--primary-dark);
        }

        &:visited {
            color: var(--primary);
        }
    }
    /* Inline Text Elements */
    :where(strong, b) {
        font-weight: var(--font-weight-7);
    }
    :where(em, i) {
        font-style: italic;
    }
    :where(small) {
        font-size: var(--font-size-0);
    }
    :where(code) {
        background-color: var(--surface-tonal);
        border-radius: var(--radius-1);
        font-family: var(--font-mono);
        font-size: 0.9em;
        padding: 0.2ex 0.5ex;
    }
    :where(kbd) {
        background-color: var(--text-color-2);
        border-radius: var(--radius-1);
        color: var(--text-color-2-contrast);
        font-family: var(--font-mono);
        padding: 0.2ex 0.5ex;
    }
    :where(mark) {
        background-color: oklch(from var(--color-8) l c h / 0.3);
        border-radius: var(--radius-1);
        padding: 0.1ex 0.3ex;
    }
    /* Block Elements */
    :where(blockquote) {
        border-inline-start: var(--border-size-3) solid var(--border-color);
        margin-inline: var(--size-4);
        padding-block: var(--size-3);
        padding-inline: var(--size-4);
    }
    :where(pre) {
        background-color: var(--surface-tonal);
        border-radius: var(--radius-2);
        font-family: var(--font-mono);
        overflow-x: auto;
        padding: var(--size-4);
    }
    :where(hr) {
        background-color: var(--border-color);
        block-size: var(--border-size-1);
        border: 0;
        margin-block: var(--size-fluid-3);
    }
    /* Form Elements */
    :where(fieldset) {
        border: var(--border-size-1) solid var(--border-color);
        border-radius: var(--radius-2);
        padding: var(--size-3);
    }
    :where(legend) {
        font-weight: var(--font-weight-6);
        padding-inline: var(--size-2);
    }
    :where(label) {
        cursor: pointer;
        font-weight: var(--font-weight-5);
    }
    /* Table Elements */
    :where(table) {
        border-collapse: collapse;
        width: 100%;
    }
    :where(th, td) {
        border: var(--border-size-1) solid var(--border-color);
        padding: var(--size-2) var(--size-3);
        text-align: start;
    }
    :where(th) {
        background-color: var(--surface-tonal);
        font-weight: var(--font-weight-6);
    }
    /* Media Elements */
    :where(figure) {
        display: grid;
        gap: var(--size-2);
        place-items: center;
    }
    :where(figcaption) {
        font-size: var(--font-size-0);
        text-align: center;
        text-wrap: balance;
    }
    /* Definition Lists */
    :where(dt) {
        font-weight: var(--font-weight-6);
    }
    :where(dd) {
        margin-inline-start: var(--size-4);
    }
    :where(dt:not(:first-of-type)) {
        margin-block-start: var(--size-3);
    }
    /* Progress & Meter */
    :where(progress, meter) {
        appearance: none;
        background-color: var(--surface-tonal);
        border-radius: var(--radius-round);
        block-size: var(--size-2);
        border: 0;
        inline-size: 100%;
        overflow: hidden;
    }
    :where(progress::-webkit-progress-bar, meter::-webkit-meter-bar) {
        background-color: transparent;
        border-radius: var(--radius-round);
    }
    :where(
        progress::-webkit-progress-value,
        meter::-webkit-meter-optimum-value
    ) {
        background-color: var(--primary);
        border-radius: var(--radius-round);
        transition: inline-size 0.2s var(--ease-out-3);
    }
    :where(progress::-moz-progress-bar, meter::-moz-meter-bar) {
        background-color: var(--primary);
        border-radius: var(--radius-round);
    }
}
/* ======================================== 4. LAYOUTS - Page Structure & Grids ======================================== */
@layer layout {
    body {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100svh;
        overflow: hidden;
        overscroll-behavior: none;
        display: grid;
        grid-template:
            "header header header" auto
            "nav main aside" 1fr
            "footer footer footer" auto
            / auto 1fr auto;
        padding: var(--gap-size);
        margin: 0;

        > header {
            grid-area: header;
            margin-bottom: var(--gap-size);
            padding-inline: var(--size-2);
            display: flex;
            flex-wrap: wrap;
            align-items: center;
        }
        > nav {
            grid-area: nav;
            margin-right: var(--gap-size);
            background-color: var(--surface-hue);
        }
        > main {
            grid-area: main;
            background-color: var(--surface-tonal);
        }
        > aside {
            grid-area: aside;
            margin-left: var(--gap-size);
            background-color: var(--surface-hue);
        }
        > footer {
            grid-area: footer;
            margin-top: var(--gap-size);
            margin-inline: var(--size-2);
        }

        > header,
        > nav,
        > main,
        > aside,
        > footer {
            display: grid;
            grid-template:
                "header header header" auto
                "nav main aside" 1fr
                "footer footer footer" auto
                / auto 1fr auto;
            overflow-y: auto;
            min-height: 0;

            &:where(:not([popover="auto"])) {
                border-radius: var(--radius-3);
            }

            > header {
                grid-area: header;
                margin-bottom: var(--gap-size);
                padding-inline: var(--size-2);
            }
            > nav {
                grid-area: nav;
                margin-right: var(--gap-size);
                overflow-y: auto;
            }
            > main {
                grid-area: main;
                overflow: auto;
                min-height: 0;
            }
            > aside {
                grid-area: aside;
                margin-left: var(--gap-size);
                overflow-y: auto;
            }
            > footer {
                grid-area: footer;
                margin-top: var(--gap-size);
                padding-inline: var(--size-2);
            }
            > header,
            > nav,
            > main,
            > aside,
            > footer {
                border-radius: var(--radius-2);
            }
        }

        > header:empty,
        > nav:empty,
        > aside:empty,
        > footer:empty {
            display: none;
        }
    }

    /* LAYOUT UTILITY */
    .layout {
        display: grid;
        grid-template-columns: auto 1fr auto;
        grid-template-rows: auto 1fr auto;
        width: 100%;
        height: 100%;

        /* Placement utilities using CSS anchor position naming */
        .start-start {
            grid-area: 1 / 1;
            justify-self: start;
            align-self: start;
        }
        .start {
            grid-area: 1 / 2;
            justify-self: center;
            align-self: start;
        }
        .start-end {
            grid-area: 1 / 3;
            justify-self: end;
            align-self: start;
        }
        .center-start {
            grid-area: 2 / 1;
            justify-self: start;
            align-self: center;
        }
        .center {
            grid-area: 2 / 2;
            justify-self: center;
            align-self: center;
        }
        .center-end {
            grid-area: 2 / 3;
            justify-self: end;
            align-self: center;
        }
        .end-start {
            grid-area: 3 / 1;
            justify-self: start;
            align-self: end;
        }
        .end {
            grid-area: 3 / 2;
            justify-self: center;
            align-self: end;
        }
        .end-end {
            grid-area: 3 / 3;
            justify-self: end;
            align-self: end;
        }
    }
}

/* ======================================== 5A. COMPONENTS.PRIMITIVES - Basic UI ======================================== */
@layer components.primitives {
    /* Buttons */
    :where(button, .button) {
        --_bg-color: transparent;
        --_border-color: transparent;
        --_text-color: var(--primary);
        --_border-radius: var(--radius-round);
        --_min-height: 2.375rem;
        appearance: none;
        background: var(--_bg-color);
        border: var(--border-size-1) solid var(--_border-color);
        border-radius: var(--_border-radius);
        color: var(--_text-color);
        cursor: pointer;
        display: inline-flex;
        align-items: center;
        justify-content: center;
        font-weight: var(--font-weight-6);
        gap: var(--size-2);
        min-block-size: var(--_min-height);
        padding-block: 0.5ex;
        padding-inline: 1.5ex;
        text-decoration: none;
        user-select: none;
        transition: all 0.2s var(--ease-out-3);

        &:hover:not(:disabled) {
            --_bg-color: oklch(from var(--primary) l c h / 0.1);
        }

        &:active:not(:disabled) {
            box-shadow: var(--inner-shadow-2);
            transform: translateY(1px);
        }

        &:disabled {
            cursor: not-allowed;
            opacity: 0.5;
        }

        /* Variants */
        &.filled {
            --_bg-color: var(--primary);
            --_text-color: var(--primary-contrast);

            &:hover:not(:disabled) {
                --_bg-color: var(--primary-dark);
            }
        }

        &.outlined {
            --_border-color: var(--primary);
            --_text-color: var(--primary);

            &:hover:not(:disabled) {
                --_bg-color: var(--primary);
                --_text-color: var(--primary-contrast);
            }
        }

        &.tonal {
            --_bg-color: oklch(from var(--primary) l c h / 0.2);
            --_text-color: var(--primary);

            &:hover:not(:disabled) {
                --_bg-color: oklch(from var(--primary) l c h / 0.3);
            }
        }

        /* Sizes */
        &.small {
            --_min-height: 1.875rem;
            padding-inline: 1ex;
        }

        &.large {
            --_min-height: 2.875rem;
            padding-inline: 2ex;
        }
    }
    /* Icon Buttons */
    :where(button:has(> svg:only-child)) {
        aspect-ratio: 1;
        padding: 0;
        border-radius: var(--radius-round);
        inline-size: var(--size-6);
        svg {
            max-inline-size: var(--size-5);
        }
    }
    /* Input Fields */
    :where(input, textarea, select) {
        appearance: none;
        background-color: var(--surface-tonal);
        border: var(--border-size-1) solid var(--border-color);
        border-radius: var(--radius-2);
        color: var(--text-color-1);
        font-family: inherit;
        font-size: var(--font-size-1);
        padding: var(--size-3);
        width: 100%;
        transition: border-color 0.2s var(--ease-out-3);
        &:focus {
            border-color: var(--primary);
            outline: 2px solid var(--primary);
            outline-offset: -2px;
        }

        &:disabled {
            cursor: not-allowed;
            opacity: 0.5;
        }

        &::placeholder {
            color: var(--text-color-2);
        }
    }
    :where(textarea) {
        field-sizing: content;
        min-block-size: 5rem;
        resize: vertical;
    }
    :where(select) {
        cursor: pointer;
        padding-inline-end: var(--size-8);
        background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%236b7280' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='m6 8 4 4 4-4'/%3e%3c/svg%3e");
        background-position: right var(--size-3) center;
        background-repeat: no-repeat;
        background-size: var(--size-4);
    }
    /* Checkboxes & Radio */
    :where(input[type="checkbox"], input[type="radio"]) {
        accent-color: var(--primary);
        block-size: var(--size-4);
        cursor: pointer;
        inline-size: var(--size-4);
        margin: 0;
    }
    /* Range Sliders */
    :where(input[type="range"]) {
        appearance: none;
        background: transparent;
        cursor: pointer;
        height: var(--size-6);
        width: 100%;
        &::-webkit-slider-track {
            background: var(--surface-tonal);
            border-radius: var(--radius-round);
            height: var(--size-1);
        }

        &::-webkit-slider-thumb {
            appearance: none;
            background: var(--primary);
            border-radius: 50%;
            height: var(--size-4);
            width: var(--size-4);
            margin-top: calc((var(--size-1) - var(--size-4)) / 2);
            cursor: pointer;
        }

        &::-moz-range-track {
            background: var(--surface-tonal);
            border-radius: var(--radius-round);
            height: var(--size-1);
            border: 0;
        }

        &::-moz-range-thumb {
            background: var(--primary);
            border-radius: 50%;
            height: var(--size-4);
            width: var(--size-4);
            border: 0;
            cursor: pointer;
        }
    }
    /* Badges */
    .badge {
        background-color: var(--primary);
        border-radius: var(--radius-round);
        color: var(--primary-contrast);
        display: inline-flex;
        align-items: center;
        font-size: var(--font-size-00);
        font-weight: var(--font-weight-6);
        min-inline-size: var(--size-4);
        padding-block: var(--size-1);
        padding-inline: var(--size-2);
        text-align: center;
        &.dot {
            border-radius: 50%;
            min-inline-size: var(--size-2);
            block-size: var(--size-2);
            padding: 0;
        }
    }
    /* Chips */
    .chip {
        background-color: var(--surface-tonal);
        border: var(--border-size-1) solid var(--border-color);
        border-radius: var(--radius-round);
        color: var(--text-color-1);
        display: inline-flex;
        align-items: center;
        font-size: var(--font-size-0);
        gap: var(--size-1);
        padding-block: var(--size-1);
        padding-inline: var(--size-3);
        &:has(button) {
            padding-inline-end: var(--size-1);
        }
    }
    /* Avatars */
    .avatar {
        aspect-ratio: 1;
        background-color: var(--surface-tonal);
        border-radius: 50%;
        color: var(--text-color-1);
        display: inline-flex;
        align-items: center;
        justify-content: center;
        font-weight: var(--font-weight-6);
        inline-size: var(--size-8);
        overflow: clip;
        position: relative;
        img {
            block-size: 100%;
            inline-size: 100%;
            object-fit: cover;
            position: absolute;
            inset: 0;
        }

        &.square {
            border-radius: var(--radius-2);
        }

        &.small {
            inline-size: var(--size-6);
        }

        &.large {
            inline-size: var(--size-10);
        }
    }
    /* Switch */
    .switch {
        appearance: none;
        background-color: var(--surface-tonal);
        border: var(--border-size-1) solid var(--border-color);
        border-radius: var(--radius-round);
        cursor: pointer;
        inline-size: var(--size-8);
        block-size: var(--size-5);
        margin: 0;
        position: relative;
        transition: all 0.2s var(--ease-out-3);
        &::before {
            background-color: var(--text-color-1);
            border-radius: 50%;
            content: "";
            inline-size: var(--size-3);
            block-size: var(--size-3);
            position: absolute;
            top: 50%;
            left: var(--size-1);
            transform: translateY(-50%);
            transition: all 0.2s var(--ease-out-3);
        }

        &:checked {
            background-color: var(--primary);
            border-color: var(--primary);

            &::before {
                background-color: var(--primary-contrast);
                left: calc(100% - var(--size-3) - var(--size-1));
            }
        }

        &:disabled {
            cursor: not-allowed;
            opacity: 0.5;
        }
    }
}
/* ======================================== 5B. COMPONENTS.COMPOSITE - Complex UI ======================================== */
@layer components.composite {
    /* Cards */
    :where(article, .card) {
        background-color: var(--surface-default);
        border: var(--border-size-1) solid var(--border-color);
        border-radius: var(--radius-3);
        display: flex;
        flex-direction: column;
        overflow: hidden;
        /* Card Variants */
        &.elevated {
            border: 0;
            box-shadow: var(--shadow-2);
        }

        &.tonal {
            background-color: var(--surface-tonal);
            border-color: transparent;
        }

        /* Card Content */
        > header,
        > .header {
            padding: var(--size-4) var(--size-4) 0;
        }

        > .content,
        > main {
            flex: 1;
            padding: var(--size-4);
        }

        > footer,
        > .actions {
            display: flex;
            gap: var(--size-2);
            padding: 0 var(--size-4) var(--size-4);
        }

        > img,
        > video {
            aspect-ratio: var(--ratio-widescreen);
            object-fit: cover;
            width: 100%;
        }
    }
    /* Lists */
    :where(ul.list, ol.list, .list) {
        background-color: var(--surface-default);
        border-radius: var(--radius-2);
        list-style: none;
        padding: var(--size-2) 0;
        li {
            align-items: center;
            display: flex;
            font-size: var(--font-size-0);
            gap: var(--size-3);
            min-block-size: var(--size-8);
            padding: var(--size-2) var(--size-3);
            position: relative;

            &:hover {
                background-color: var(--surface-tonal);
            }

            /* List Item Content */
            .start {
                align-items: center;
                display: flex;
                flex-shrink: 0;
            }

            .content {
                flex: 1;
                min-width: 0;

                .title {
                    font-weight: var(--font-weight-5);
                    line-height: var(--font-lineheight-1);
                }

                .subtitle {
                    color: var(--text-color-2);
                    font-size: var(--font-size-00);
                    line-height: var(--font-lineheight-1);
                }
            }

            .end {
                align-items: center;
                display: flex;
                flex-shrink: 0;
                font-size: var(--font-size-00);
            }
        }

        /* Dense variant */
        &.dense li {
            min-block-size: var(--size-6);
            padding-block: var(--size-1);
        }

        /* Bordered variant */
        &.bordered li + li {
            border-top: var(--border-size-1) solid var(--border-color);
        }
    }
    /* Tables */
    :where(table) {
        background-color: var(--surface-default);
        border: var(--border-size-1) solid var(--border-color);
        border-radius: var(--radius-2);
        overflow: hidden;
        width: 100%;
        th {
            background-color: var(--surface-tonal);
            font-weight: var(--font-weight-6);
            text-align: start;
        }

        th,
        td {
            border-bottom: var(--border-size-1) solid var(--border-color);
            padding: var(--size-3);
        }

        tbody tr:hover {
            background-color: var(--surface-tonal);
        }

        tbody tr:last-child th,
        tbody tr:last-child td {
            border-bottom: 0;
        }

        /* Dense variant */
        &.dense th,
        &.dense td {
            padding: var(--size-2);
        }
    }
    /* Form Groups */
    .field {
        display: grid;
        gap: var(--size-1);
        label {
            color: var(--text-color-2);
            font-size: var(--font-size-0);
            font-weight: var(--font-weight-5);
        }

        .supporting-text {
            color: var(--text-color-2);
            font-size: var(--font-size-00);
            line-height: var(--font-lineheight-3);
        }

        &.error {
            label,
            .supporting-text {
                color: var(--red);
            }

            input,
            textarea,
            select {
                border-color: var(--red);
            }
        }
    }
    /* Alert/Notice */
    .alert {
        background-color: var(--surface-tonal);
        border: var(--border-size-1) solid var(--border-color);
        border-radius: var(--radius-2);
        padding: var(--size-4);
        &.error {
            background-color: oklch(from var(--red) l c h / 0.1);
            border-color: var(--red);
            color: var(--red);
        }

        &.warning {
            background-color: oklch(from var(--orange) l c h / 0.1);
            border-color: var(--orange);
            color: var(--orange);
        }

        &.success {
            background-color: oklch(from var(--green) l c h / 0.1);
            border-color: var(--green);
            color: var(--green);
        }

        &.info {
            background-color: oklch(from var(--blue) l c h / 0.1);
            border-color: var(--blue);
            color: var(--blue);
        }
    }
}
/* ======================================== 5C. COMPONENTS.INTERACTIVE - JS Required ======================================== */
@layer components.interactive {
    /* Tabs */
    .tabs {
        display: flex;
        flex-direction: column;
        [role="tablist"] {
            border-bottom: var(--border-size-1) solid var(--border-color);
            display: flex;
            position: relative;

            button {
                background: transparent;
                border: 0;
                color: var(--text-color-2);
                cursor: pointer;
                font-weight: var(--font-weight-5);
                padding: var(--size-3) var(--size-4);
                position: relative;
                transition: color 0.2s var(--ease-out-3);

                &:hover {
                    color: var(--primary);
                }

                &[aria-selected="true"] {
                    color: var(--primary);

                    &::after {
                        background-color: var(--primary);
                        bottom: -1px;
                        content: "";
                        height: 2px;
                        left: 0;
                        position: absolute;
                        right: 0;
                    }
                }
            }
        }

        [role="tabpanel"] {
            padding: var(--size-4);

            &:not([aria-hidden="false"]) {
                display: none;
            }
        }
    }
    /* Accordion/Details */
    :where(details) {
        background-color: var(--surface-default);
        border: var(--border-size-1) solid var(--border-color);
        border-radius: var(--radius-2);
        overflow: hidden;
        summary {
            background-color: var(--surface-tonal);
            cursor: pointer;
            font-weight: var(--font-weight-6);
            padding: var(--size-3);
            user-select: none;

            &:hover {
                background-color: var(--surface-filled);
            }
        }

        .content {
            padding: var(--size-4);
        }

        /* Animation */
        @media (prefers-reduced-motion: no-preference) {
            interpolate-size: allow-keywords;

            &::details-content {
                block-size: 0;
                opacity: 0;
                overflow-y: clip;
                transition:
                    content-visibility 0.2s allow-discrete,
                    opacity 0.2s,
                    block-size 0.2s;
            }

            &[open]::details-content {
                block-size: auto;
                opacity: 1;
            }
        }
    }
    /* Modal Dialog */
    dialog {
        background-color: var(--surface-default);
        border: var(--border-size-1) solid var(--border-color);
        border-radius: var(--radius-3);
        box-shadow: var(--shadow-4);
        max-inline-size: min(90vw, var(--size-content-3));
        max-block-size: min(90vh, 80vh);
        padding: 0;
        &::backdrop {
            background-color: oklch(0 0 0 / 0.5);
            backdrop-filter: blur(4px);
        }

        .dialog-header {
            border-bottom: var(--border-size-1) solid var(--border-color);
            display: flex;
            align-items: center;
            justify-content: space-between;
            padding: var(--size-4);
        }

        .dialog-content {
            padding: var(--size-4);
            overflow-y: auto;
        }

        .dialog-actions {
            border-top: var(--border-size-1) solid var(--border-color);
            display: flex;
            gap: var(--size-2);
            justify-content: flex-end;
            padding: var(--size-4);
        }

        /* Animation */
        @media (prefers-reduced-motion: no-preference) {
            opacity: 1;
            scale: 1;

            @starting-style {
                opacity: 0;
                scale: 0.9;
            }

            transition:
                display 0.3s allow-discrete,
                overlay 0.3s allow-discrete,
                opacity 0.3s var(--ease-out-3),
                scale 0.3s var(--ease-out-3);

            &:not([open]) {
                opacity: 0;
                scale: 0.9;
            }
        }
    }
    /* Popover */
    [popover] {
        background-color: var(--surface-default);
        border: var(--border-size-1) solid var(--border-color);
        border-radius: var(--radius-2);
        box-shadow: var(--shadow-3);
        padding: var(--size-3);
        &::backdrop {
            background-color: transparent;
        }

        /* Animation */
        @media (prefers-reduced-motion: no-preference) {
            opacity: 1;
            transform: translateY(0);

            @starting-style {
                opacity: 0;
                transform: translateY(-10px);
            }

            transition:
                display 0.2s allow-discrete,
                overlay 0.2s allow-discrete,
                opacity 0.2s var(--ease-out-3),
                transform 0.2s var(--ease-out-3);

            &:not(:popover-open) {
                opacity: 0;
                transform: translateY(-10px);
            }
        }
    }
    /* Tooltip */
    .tooltip {
        position: relative;
        &::after {
            background-color: oklch(0 0 0 / 0.9);
            border-radius: var(--radius-1);
            color: white;
            content: attr(data-tooltip);
            font-size: var(--font-size-00);
            opacity: 0;
            padding: var(--size-1) var(--size-2);
            pointer-events: none;
            position: absolute;
            top: 100%;
            left: 50%;
            transform: translateX(-50%) translateY(var(--size-1));
            white-space: nowrap;
            z-index: var(--layer-important);
            transition: opacity 0.2s var(--ease-out-3);
        }

        &:hover::after {
            opacity: 1;
        }
    }
}

/* ======================================== 6. PATTERNS - Design Patterns ======================================== */
@layer patterns {
    /* Navigation Patterns */
    nav {
        / Primary Navigation */ &.primary {
            display: flex;
            flex-direction: column;
            padding: var(--size-2) 0;
            ul {
                display: flex;
                flex-direction: column;
                gap: var(--size-1);
                list-style: none;
                padding: 0;

                li {
                    a {
                        align-items: center;
                        border-radius: var(--radius-2);
                        color: var(--text-color-1);
                        display: flex;
                        gap: var(--size-3);
                        padding: var(--size-2) var(--size-3);
                        text-decoration: none;
                        transition: background-color 0.2s var(--ease-out-3);

                        &:hover {
                            background-color: var(--surface-tonal);
                        }

                        &[aria-current="page"] {
                            background-color: oklch(
                                from var(--primary) l c h / 0.2
                            );
                            color: var(--primary);
                            font-weight: var(--font-weight-6);
                        }

                        svg {
                            flex-shrink: 0;
                            inline-size: var(--size-4);
                        }
                    }
                }
            }

            /* Dense Navigation */
            &.dense {
                ul li a {
                    flex-direction: column;
                    gap: var(--size-1);
                    min-block-size: var(--size-10);
                    text-align: center;

                    svg {
                        inline-size: var(--size-5);
                    }

                    span {
                        font-size: var(--font-size-00);
                    }
                }
            }
        }

        /* Breadcrumb Navigation */
        &.breadcrumb {
            ol {
                align-items: center;
                display: flex;
                gap: var(--size-2);
                list-style: none;
                padding: 0;

                li {
                    align-items: center;
                    display: flex;
                    gap: var(--size-2);

                    &:not(:last-child)::after {
                        content: "›";
                        color: var(--text-color-2);
                    }

                    a {
                        color: var(--text-color-2);
                        text-decoration: none;

                        &:hover {
                            color: var(--primary);
                        }
                    }

                    &:last-child a {
                        color: var(--text-color-1);
                        pointer-events: none;
                    }
                }
            }
        }

        /* Pagination */
        &.pagination {
            ul {
                align-items: center;
                display: flex;
                gap: var(--size-1);
                justify-content: center;
                list-style: none;
                padding: 0;

                li {
                    a {
                        align-items: center;
                        border-radius: var(--radius-2);
                        display: flex;
                        justify-content: center;
                        min-inline-size: var(--size-6);
                        block-size: var(--size-6);
                        text-decoration: none;
                        transition: background-color 0.2s var(--ease-out-3);

                        &:hover {
                            background-color: var(--surface-tonal);
                        }

                        &[aria-current="page"] {
                            background-color: var(--primary);
                            color: var(--primary-contrast);
                        }
                    }
                }
            }
        }
    }
    /* Hero Pattern */
    .hero {
        align-items: center;
        display: flex;
        flex-direction: column;
        gap: var(--size-4);
        padding: var(--size-fluid-6) var(--size-4);
        text-align: center;
        h1 {
            max-inline-size: var(--size-header-3);
        }

        p {
            color: var(--text-color-2);
            font-size: var(--font-size-3);
            max-inline-size: var(--size-content-2);
        }

        .actions {
            display: flex;
            gap: var(--size-3);
            flex-wrap: wrap;
            justify-content: center;
        }
    }
    /* Feature Grid */
    .features {
        display: grid;
        gap: var(--size-4);
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        .feature {
            text-align: center;

            .icon {
                align-items: center;
                background-color: oklch(from var(--primary) l c h / 0.1);
                border-radius: 50%;
                color: var(--primary);
                display: flex;
                justify-content: center;
                inline-size: var(--size-10);
                block-size: var(--size-10);
                margin: 0 auto var(--size-3);

                svg {
                    inline-size: var(--size-6);
                }
            }

            h3 {
                margin-bottom: var(--size-2);
            }

            p {
                color: var(--text-color-2);
            }
        }
    }
    /* Stats Pattern */
    .stats {
        display: grid;
        gap: var(--size-4);
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        .stat {
            text-align: center;

            .number {
                color: var(--primary);
                font-size: var(--font-size-6);
                font-weight: var(--font-weight-8);
                line-height: 1;
            }

            .label {
                color: var(--text-color-2);
                font-size: var(--font-size-0);
                margin-top: var(--size-1);
            }
        }
    }
    /* Sidebar Layout */
    .sidebar-layout {
        display: grid;
        gap: var(--size-4);
        grid-template-columns: auto 1fr;
        .sidebar {
            min-inline-size: 240px;
        }

        .main-content {
            min-inline-size: 0;
        }

        @container (width < 768px) {
            grid-template-columns: 1fr;

            .sidebar {
                min-inline-size: unset;
            }
        }
    }
}


/* ========================================
7. THEMES - Color Schemes & Variants
======================================== */
@layer themes {
/* Base Theme Variables */
:where(html) {
color-scheme: light dark;
--palette-hue: var(--oklch-cyan);
--palette-hue-rotate-by: 5;
--palette-chroma: 0.89;
/* Semantic Colors */
--primary: var(--color-8);
--primary-light: oklch(from var(--primary) calc(l * 1.25) c h);
--primary-dark: oklch(from var(--primary) calc(l * 0.75) c h);
--primary-contrast: var(--color-1);

/* Text Colors */
--text-color-1: light-dark(var(--color-15), var(--color-1));
--text-color-1-contrast: light-dark(var(--color-2), var(--color-15));
--text-color-2: light-dark(var(--color-13), var(--color-4));
--text-color-2-contrast: light-dark(var(--color-4), var(--color-13));

/* Surface Colors */
--surface-default: light-dark(var(--color-1), var(--color-13));
--surface-tonal: light-dark(var(--color-3), var(--color-12));
--surface-filled: light-dark(var(--color-4), var(--color-11));
--surface-elevated: light-dark(var(--color-1), var(--color-12));
--surface-hue: light-dark(
  color-mix(in srgb, var(--color-4), var(--color-3) 93%),
  color-mix(in srgb, var(--color-2), var(--color-13) 93%)
);
